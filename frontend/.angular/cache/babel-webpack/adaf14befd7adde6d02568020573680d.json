{"ast":null,"code":"import { BaseChartDirective } from 'ng2-charts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ng2-charts\";\nexport let LineChartComponent = /*#__PURE__*/(() => {\n  class LineChartComponent {\n    constructor() {\n      this.lineChartData = {\n        datasets: [{\n          data: [65, 59, 80, 81, 56, 55, 40],\n          label: 'Series A',\n          backgroundColor: 'rgba(148,159,177,0.2)',\n          borderColor: 'rgba(148,159,177,1)',\n          pointBackgroundColor: 'rgba(148,159,177,1)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgba(148,159,177,0.8)',\n          fill: 'origin'\n        }, {\n          data: [28, 48, 40, 19, 86, 27, 90],\n          label: 'Series B',\n          backgroundColor: 'rgba(77,83,96,0.2)',\n          borderColor: 'rgba(77,83,96,1)',\n          pointBackgroundColor: 'rgba(77,83,96,1)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgba(77,83,96,1)',\n          fill: 'origin'\n        }, {\n          data: [180, 480, 770, 90, 1000, 270, 400],\n          label: 'Series C',\n          yAxisID: 'y-axis-1',\n          backgroundColor: 'rgba(255,0,0,0.3)',\n          borderColor: 'red',\n          pointBackgroundColor: 'rgba(148,159,177,1)',\n          pointBorderColor: '#fff',\n          pointHoverBackgroundColor: '#fff',\n          pointHoverBorderColor: 'rgba(148,159,177,0.8)',\n          fill: 'origin'\n        }],\n        labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July']\n      };\n      this.lineChartOptions = {\n        elements: {\n          line: {\n            tension: 0.5\n          }\n        },\n        scales: {\n          // We use this empty structure as a placeholder for dynamic theming.\n          x: {},\n          'y-axis-0': {\n            position: 'left'\n          },\n          'y-axis-1': {\n            position: 'right',\n            grid: {\n              color: 'rgba(255,0,0,0.3)'\n            },\n            ticks: {\n              color: 'red'\n            }\n          }\n        }\n      };\n    }\n\n    ngOnInit() {}\n\n  }\n\n  LineChartComponent.ɵfac = function LineChartComponent_Factory(t) {\n    return new (t || LineChartComponent)();\n  };\n\n  LineChartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LineChartComponent,\n    selectors: [[\"app-line-chart\"]],\n    viewQuery: function LineChartComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(BaseChartDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart = _t.first);\n      }\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[\"baseChart\", \"\", \"height\", \"75\", \"type\", \"line\", 3, \"data\", \"options\"]],\n    template: function LineChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\");\n        i0.ɵɵelement(1, \"canvas\", 0);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"data\", ctx.lineChartData)(\"options\", ctx.lineChartOptions);\n      }\n    },\n    directives: [i1.BaseChartDirective],\n    styles: [\"\"]\n  });\n  return LineChartComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}