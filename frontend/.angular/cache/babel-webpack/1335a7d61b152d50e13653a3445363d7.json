{"ast":null,"code":"import { BaseChartDirective } from 'ng2-charts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ng2-charts\";\nexport let BarChartComponent = /*#__PURE__*/(() => {\n  class BarChartComponent {\n    constructor() {\n      this.barChartOptions = {\n        responsive: true,\n        // We use these empty structures as placeholders for dynamic theming.\n        scales: {\n          x: {},\n          y: {\n            min: 10\n          }\n        },\n        plugins: {\n          legend: {\n            display: true\n          }\n        }\n      };\n      this.barChartData = {\n        datasets: [{\n          data: []\n        }]\n      };\n    }\n\n    ngOnInit() {}\n\n    set chartLabel(label) {\n      var _a;\n\n      this.barChartData.datasets[0].label = label;\n      (_a = this.chart) === null || _a === void 0 ? void 0 : _a.update();\n    }\n\n    set chartData(data) {\n      var _a;\n\n      console.log(data);\n      this.barChartData.datasets[0].data = data;\n      (_a = this.chart) === null || _a === void 0 ? void 0 : _a.update();\n    }\n\n    set chartDataLabels(labels) {\n      var _a;\n\n      console.log(labels);\n      this.barChartData.labels = labels;\n      (_a = this.chart) === null || _a === void 0 ? void 0 : _a.update();\n    }\n\n  }\n\n  BarChartComponent.ɵfac = function BarChartComponent_Factory(t) {\n    return new (t || BarChartComponent)();\n  };\n\n  BarChartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BarChartComponent,\n    selectors: [[\"app-bar-chart\"]],\n    viewQuery: function BarChartComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(BaseChartDirective, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart = _t.first);\n      }\n    },\n    inputs: {\n      chartLabel: \"chartLabel\",\n      chartData: \"chartData\",\n      chartDataLabels: \"chartDataLabels\"\n    },\n    decls: 1,\n    vars: 2,\n    consts: [[\"baseChart\", \"\", \"height\", \"25\", \"type\", \"bar\", 3, \"data\", \"options\"]],\n    template: function BarChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"canvas\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"data\", ctx.barChartData)(\"options\", ctx.barChartOptions);\n      }\n    },\n    directives: [i1.BaseChartDirective],\n    styles: [\"\"]\n  });\n  return BarChartComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}